#!/usr/bin/bash
choice="$1"

wifi_on() {
    nmcli radio wifi on
}

wifi_off(){
    nmcli radio wifi off
}


wifi_toggle() {
    wifi_status=$(nmcli radio wifi)
    if [[ "$wifi_status" == "enabled" ]]; then
        wifi_off
    else
        wifi_on
    fi
}


wifi_info() {
    connected=$(nmcli --fields WIFI g | sed 1d | grep -c "enabled")
    wifi_status=$(nmcli radio wifi)
    if [ "$connected" -eq 0 ]; then
        wifi_status="disconnected"
    else
        wifi_status="connected"
    fi

    json="{\"status\":\"$wifi_status\",\"name\":\"$(wifi_name)\",\"icon\":\"$(wifi_icon)\"}"
    echo $json
}

wifi_name() {
    wired_connection=$(nmcli -t -f DEVICE,TYPE connection show --active | grep "ethernet" | cut -d':' -f1)

    if [ -n "$wired_connection" ]; then
        echo "Wired"
    else
        wifi_name=$(nmcli connection show --active | grep wifi | awk '{print $1}')
        if [ -z "$wifi_name" ]; then
            echo "Wi-Fi"
        else
            echo "$wifi_name"
        fi
    fi
}

wifi_icon() {
    wired_connection=$(nmcli -t -f DEVICE,TYPE connection show --active | grep "ethernet" | cut -d':' -f1)

    if [ -n "$wired_connection" ]; then
        icon="󰈀"
    else
        wifi_status=$(nmcli radio wifi)
        signal=$(nmcli -t -f IN-USE,SIGNAL device wifi | grep '*' | cut -d':' -f2)

        if [[ "$wifi_status" == "enabled" ]]; then
            if [ "$signal" -ge 50 ]; then
                icon="󰤨"
            elif [ "$signal" -ge 60 ]; then
                icon="󰤥"
            elif [ "$signal" -ge 70 ]; then
                icon="󰤢"
            elif [ "$signal" -ge 80 ]; then
                icon="󰤟"
            else
                icon="󰤯"
            fi
        else
            icon="󰤮"
        fi
    fi
    echo $icon
}


if [[ $choice == "--on" ]]; then
    wifi_on
elif [[ $choice == "--off" ]]; then
    wifi_off
elif [[ $choice == "--toggle" ]]; then
    wifi_toggle
elif [[ $choice == "--info" ]]; then
    wifi_info
elif [[ $choice == "--scan" ]]; then
    nmcli device wifi rescan
    python $HOME/.config/eww/scripts/wifi_scan &
fi