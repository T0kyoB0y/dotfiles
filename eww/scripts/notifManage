#!/usr/bin/python

import sys, os, json
from subprocess import run as shell
from time import sleep as wait
from colorama import Fore

# # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                     #
#        Read, Write and verif json functions         #
#                                                     #
# # # # # # # # # # # # # # # # # # # # # # # # # # # #

def verifJson():
    # ObtÃ©n la ruta de la carpeta donde se encuentra el archivo jsonPath
    folder_path = os.path.dirname(jsonPath)

    if not os.path.exists(folder_path):
        os.makedirs(folder_path)

    if not os.path.exists(jsonPath):
        with open(jsonPath, 'w') as file:
            file.write("[]")


def clearJson():
    with open(jsonPath, 'w') as file:
        file.write("[]")

def delJson(notification_id):
    oldData = readJson()

    # Filtrar las notificaciones para mantener solo aquellas con un ID diferente al proporcionado
    oldData = [notif for notif in oldData if notif.get('id') != notification_id]

    with open(jsonPath, 'w') as file:
        json.dump(oldData, file)

def readJson(type=None):
    if type == "txt":
        temp = []
        with open(jsonPath, 'r') as file:
            data = file.read()
        
        for i in range(len(data)):
            temp.append(data[i])
        return data

    else:   
        with open(jsonPath, 'r') as file:
            data = json.load(file)
        return data
    
def addJson(data):
    oldData = readJson()

    newData = json.loads(data)

    # Insertar newData al principio de la lista
    oldData.insert(0, newData)

    with open(jsonPath, 'w') as file:
        json.dump(oldData, file)



def ewwUpdate(clear=False):
    if clear:
        command = "eww update notifHist=\"[]\""
        shell(command, shell=True)

    else:
        content = readJson("txt")
        content = content.replace("\"", "\\\"")
        command = f"eww update notifHist=\"{content}\""
        shell(command, shell=True)
            

def main():
    if arg == "--send":
        arg2 = sys.argv[2]        
        addJson(arg2)
        ewwUpdate()

    elif arg == "--del":
        arg2 = sys.argv[2]
        delJson(arg2)
        ewwUpdate()

    elif arg == "--reload":
        ewwUpdate()
    
    elif arg == "--clear":
        clearJson()
        ewwUpdate(clear=True)
 
    else:
        print("usage: ./script --add {json}")
        print("                --del {id}")
        print("                --clear")


    
jsonPath = os.path.expanduser("~/.cache/eww/oldNotif.json")

if len(sys.argv) > 1:
    arg = sys.argv[1]
else:
    arg = "NULL"

if __name__ == "__main__":

    verifJson()

    main()