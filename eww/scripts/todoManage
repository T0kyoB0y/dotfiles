#!/usr/bin/python

import sys, os, json
from subprocess import run as shell

def verifJson():
    folder_path = os.path.dirname(jsonPath)

    if not os.path.exists(folder_path):
        os.makedirs(folder_path)

    if not os.path.exists(jsonPath):
        with open(jsonPath, 'w') as file:
            file.write("[]")

def clearJson():
    with open(jsonPath, 'w') as file:
        file.write("[]")

def delJson(task_id):
    oldData = readJson()
    oldData = [task for task in oldData if task.get('id') != task_id]

    with open(jsonPath, 'w') as file:
        json.dump(oldData, file)

def readJson(type=None):
    if type == "txt":
        with open(jsonPath, 'r') as file:
            data = file.read()
        return data

    else:   
        with open(jsonPath, 'r') as file:
            data = json.load(file)
        return data

def generateId():
    tasks = readJson()
    if not tasks:
        return 1
    else:
        ids = [task['id'] for task in tasks]
        return max(ids) + 1

def addJson(title, body):
    if title and body:
        task_id = generateId()
        newTask = {'id': task_id, 'title': title, 'body': body}
        oldData = readJson()
        oldData.append(newTask)

        with open(jsonPath, 'w') as file:
            json.dump(oldData, file)

def ewwUpdate(clear=False):
    if clear:
        command = "eww update taskList=\"[]\""
        shell(command, shell=True)
    else:
        content = readJson("txt")
        command = f"eww update taskList='{content}'"
        shell(command, shell=True)

def main():
    if arg == "--add":
        arg2 = sys.argv[2] if len(sys.argv) > 2 else ""
        arg3 = sys.argv[3] if len(sys.argv) > 3 else ""
        addJson(arg2, arg3)
        ewwUpdate()
    elif arg == "--del":
        arg2 = int(sys.argv[2])
        delJson(arg2)
        ewwUpdate()
    elif arg == "--reload":
        ewwUpdate()
    elif arg == "--clear":
        clearJson()
        ewwUpdate(clear=True)
    else:
        print("usage: ./script --add {title} {body}")
        print("                --del {id}")
        print("                --clear")

jsonPath = os.path.expanduser("~/.cache/eww/taskList.json")

if len(sys.argv) > 1:
    arg = sys.argv[1]
else:
    arg = "NULL"


if __name__ == "__main__":
    verifJson()
    main()
