(defwindow launcher
  :monitor 0
  :stacking "fg"
  :windowtype "dialog"
  :focusable true
  :geometry (geometry
    :width "430px"
    :height "600px"
    :anchor "center"
  )
  (app_launcher)
)

(defwidget app_launcher []
  (eventbox
    :onhoverlost "${EWW_CMD} close launcher"
    :cursor "default"
    
    (box
      :space-evenly false
      :orientation "v"
      :class "launcherBox"
      :spacing 20
      (box
        :space-evenly false
        :class "launcherInputBox"
        
        (label
          :text "ó°œ¬"
          :class "icon"
        )
        
        (input
          :class "launcherInput"
          :onchange "./scripts/python/apps.py --query '{}' &"
          ; :onchange "${EWW_CMD} update apps_query='{}'"

          :onaccept "${
          arraylength(apps.math) > 0 ? apps.math[0].desktop :
          arraylength(apps.cmd) > 0 ? apps.cmd[0].desktop :
          arraylength(apps.preferred) > 0 ? apps.preferred[0].desktop :
          arraylength(apps.apps) > 0 ? apps.apps[0].desktop : ''
          } > /dev/null 2>&1 & ${EWW_CMD} close launcher"
          
          :hexpand true
        )
      )
      
      (scroll
        :vscroll true
        :vexpand true
        :class "scroll"
        (box
          :space-evenly false
          :orientation "v"
          :spacing 0
          :class "launcherAppContainer"
          :style "margin-right: 15px;"
          (box
            :visible {arraylength(apps.cmd) > 0}
            :space-evenly false
            (for i in {apps.cmd}
              (app_entry
                :icon {i.icon}
                :name {i.name}
                :desc {i.comment}
                :desktop {i.desktop}
              )
            )
          )
          (box
            :visible {arraylength(apps.math) > 0}
            :spacing 5
            
            (for i in {apps.math}
              (app_entry
                :icon {i.icon}
                :name {i.name}
                :desc {i.comment}
                :desktop {i.desktop}
              )
            )
          )
          (box
            :visible {arraylength(apps.preferred) > 0}
            :spacing 5
            
            (label :text "Preferred Apps")
            (for app in {apps.preferred}
              (app_entry
                :icon {app.icon}
                :name {app.name}
                :desc {app.comment}
                :desktop {app.desktop}
              )
            )
          )
          
          (for app in {apps.apps}
            (app_entry
              :icon {app.icon}
              :name {app.name}
              :desc {app.comment}
              :desktop {app.desktop}
            )
          )
        )
      )
    )
  )
)

(defwidget app_entry [?icon name desc desktop]
  (revealer
    :reveal true
    ; :reveal {
    ;   matches(apps_query, desc) ||
    ;   matches(apps_query, "app") ||
    ;   strlength(apps_query) == 0
    ;   }

      :transition "slidedown"

    (eventbox
      :class "appEntryEventBox"
      :onclick "${desktop} > /dev/null 2>&1 & ${EWW_CMD} close launcher"
      :cursor "pointer"
      (box
        :space-evenly false
        :class "appEntryBox"
        :spacing 10
        (image
          :path icon
          :image-width 55
          :image-height 55
        )
        (box
          :orientation "v"
          :space-evenly false
          
          (label
            :markup name
            :class "appName"
            :valign "center"
            :halign "start"
            :xalign 0
          )
          (label
            :markup desc
            :class "appDesc"
            :valign "center"
            :halign "start"
            :xalign 0
            :wrap true
            :limit-width 25
            :visible {name != desc && "null" != desc }
          )
        )
      )
    )
  )
)