(defwindow launcher
  :monitor 0
  :stacking "fg"
  :windowtype "dialog"
  :focusable true
  :geometry (geometry
    :width "430px"
    :height "600px"
    :anchor "center"
  )
  (app_launcher)
)

(defwidget app_launcher []
  (eventbox
    :onhoverlost "${EWW_CMD} close launcher"
    :cursor "default"
    
    (box
      :space-evenly false
      :orientation "v"
      :class "launcherBox"
      :spacing 20
      (apps_filterer)
      (apps_container)
    )
  )
)

(defwidget apps_filterer []
  (box
    :space-evenly false
    :class "launcherInputBox"
    :hexpand true
    (label
      :text "ó°œ¬"
      :class "icon"
    )
    
    (input
      :class "launcherInput"
      :hexpand true
      :onchange "
        ${EWW_CMD} update apps_query='{}' &
        ./scripts/python/apps.py --update &
        "
      :onaccept "
        ./scripts/python/apps.py --enter {} > /dev/null 2>&1 &
        ${EWW_CMD} close launcher &
        ${EWW_CMD} update apps_query=''
        "
    )
  )
)

(defwidget apps_container []
  (scroll
    :vscroll true
    :vexpand true
    :hexpand true
    :class "scroll"
    (box
      :space-evenly false
      :orientation "v"
      :spacing 0
      :class "launcherAppContainer"
      :style "margin-right: 15px;"
        (app_entry
            :icon {cmd.icon}
            :name {cmd.name}
            :desc {cmd.comment}
            :desktop {cmd.desktop}
            :find {substring(apps_query, 0, 1) == "/"}
        )
        (app_entry
            :icon {math.icon}
            :name {math.name}
            :desc {math.comment}
            :desktop {math.desktop}
            :find {math.success}
        )
        (for category in {apps.apps}
            (box
              :space-evenly false
              :orientation "v"
              (revealer
                :transition "slidedown"
                :duration 250
                :reveal {matches(category.keywords, apps_query) && arraylength(category.apps) != 0}
                (label
                  :text {category.category}
                  :style "font-size: 20px; margin-left: 20px;"
                  :halign "start"
                )
              )

              (for app in {category.apps}
                (app_entry
                  :icon {app.icon}
                  :name {app.name}
                  :desc {app.comment}
                  :desktop {app.desktop}
                  :find {matches(app.find, apps_query) || strlength(apps_query) == 0 }
                )
              )
            )
      )
    )
  )
)

(defwidget app_entry [?icon name desc desktop ?find]
  (revealer
    :transition "slidedown"
    ; :reveal true
    :duration 250
    :reveal {find}
    (eventbox
      :class "appEntryEventBox"
      :cursor "pointer"
      :onclick "
      ${desktop} > /dev/null 2>&1 &
      ${EWW_CMD} close launcher &
      ${EWW_CMD} close supermenuWindow &
      ${EWW_CMD} update apps_query=''"
      (box
        :space-evenly false
        :class "appEntryBox"
        :spacing 10
        (image
          :class "appIcon"
          :path icon
          :image-width 25
          :image-height 25
          :valign "center"
        )
        (box
          :orientation "v"
          :space-evenly false
          
          (label
            :text name
            :class "appName"
            :valign "center"
            :halign "start"
            :xalign 0
          )
          (label
            :text desc
            :class "appDesc"
            :valign "center"
            :halign "start"
            :xalign 0
            :wrap true
            :visible {name != desc && desc != "null" }
          )
        )
      )
    )
  )
)
