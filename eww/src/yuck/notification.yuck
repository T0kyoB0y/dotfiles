(defwindow notifpopup
  :monitor 0
  :stacking "overlay"
  :windowtype "dock"
  :geometry (geometry
    :y "60px"
    :width "350px"
    :height "450px"
    :anchor "top center"
  )
  
  (box
    :space-evenly false
    :spacing 5
    :orientation "v"
    :class "notifmenuBox"
    (for notif in {notifications.popups}
      (notifpopup
        :id {notif.id}
        :source {notif.app}
        :title {notif.summary}
        :content {notif.body}
        :image {notif.image}
        :time {notif.time}
        :appglyph {notif.glyph}
        :actions {notif.actions}
      )
    )
  )
)


; We create the widget that contains the info of the notif, at the moment image display is not supported bc idk how to do it xd
(defwidget notifpopup [id source title content ?time ?image ?actions appglyph]
  (eventbox
    :onclick "./scripts/notifManage --dismiss ${id} &"
    :class "notifEventBox"
    
    (box
      :orientation "v"
      :class "notifBox ${source} Box_${source}"
      :space-evenly false
      :width 350
      :height 100
      :spacing 5
      ; "Titlebar" of the popup
      (box
        :space-evenly false
        :class "titlebar"
        :spacing 5
        
        (image
          :path appglyph
          :image-width 17
          :image-height 17
        )
        ; "LabelTitlebar" of the popup
        (label
          :limit-width 15
          :class "title"
          :valign "center"
          :text source
          :visible {strlength(source) > 0}
        )
        (label
          :text {substring(time, 0, 5)}
          :class "time"
          :halign "end"
          :hexpand true
        )
        
        (button
          :class "closebutton"
          :onclick "./scripts/notifManage --close ${id} &"
          :halign "end"
          (circular-progress
            :value {round((substring(time, 6, 7) + 5 - formattime(EWW_TIME, "%S")) * 100 / 5, 2) }
            :thickness 2
            :clockwise true
            :start-at 75
            :width 15
            :height 15
            :class "circprogress"
            (icon-widget
              :icon "󰅖"
            )
          )
        )
      )
      ; ; Body of the notification
      (box
        :space-evenly false
        :spacing 10
        :class "body"
        (literal
            :visible {image != "NULL"}
            :content {substring(image, strlength(image)-3, strlength(image)-1) == "svg" ? '
            (image
                :path image
                :class "smallImage"
                :image-height 55
                :image-width 55
                :valign "center"
            )':'
            (box
                :class "smallImage"
                :style "background-image: url(\'${image}\');"
                :height 55
                :width 55
                :valign "center"
            )'}
        ) 
        (box
          :orientation "v"
          :space-evenly false
          :halign "start"
          
          (label
            :text title
            :tooltip title
            :class "title"
            :halign "start"
            :xalign 0
            :limit-width 30
          )
          
          (label
            ; :text content
            :markup content
            :tooltip content
            :class "content"
            :halign "start"
            :xalign 0
            :wrap true
            :limit-width 100
          )
        )
      )
      (box
        :visible {source == "Screenshot"}
        :spacing 10
        :style "margin: 10px 15px 0 15px;"

        (eventbox
          :hexpand true
          :class "button"
          :onclick "imv ${image} &"
          :height 25
          :cursor "pointer"
          (label :text "Open" :style "font-family: 'IBM Plex Sans Mono';")
        )
        (eventbox
          :hexpand true
          :class "button"
          :cursor "pointer"
          :height 25
          :onclick "./scripts/notifManage --close ${id} & rm ${image} &"
          (label :text "Delete" :style "font-family: 'IBM Plex Sans Mono';")
        )
      )
      
      (box
        :visible {arraylength(actions) > 0 && source != "Discord"}
        :spacing 10
        :style "margin: 10px 15px 0 15px;"
        (for i in {actions}
          (eventbox
            :hexpand true
            :class "button"
            :onclick "./scripts/notifications --action ${id} ${i.id}"
            :height 25
            (label :text {i.label} :style "font-family: 'IBM Plex Sans Mono';")
          )
        )
      )
    )
  )
)

(defwidget notifButton []
  (revealer
    :reveal {notifications.count > 0}
    :transition "slideleft"
    (eventbox
      :cursor "pointer"
      :onclick "./scripts/notification --clear"
      (box
        :class "notifButton module"
        (icon-widget
          :icon "󱅫"
          :style "margin-bottom: -2.5px"
        )
      )
    )
  )
)

(defwidget notifHistory []
  (scroll
    :vscroll true
    :vexpand true
    :height 600
    
    (box
      :space-evenly false
      :class "notifmenuBox notifHistory"
      :space-evenly false
      :spacing 5
      :orientation "v"
      :hexpand true
      
      (for notif in {notifications.notifications}
        (notifpopup
          :id {notif.id}
          :source {notif.app}
          :title {notif.summary}
          :content {notif.body}
          :image {notif.image}
          :time {notif.time}
          :appglyph {notif.glyph}
          :actions {notif.actions}
        )
      )
    )
  )
)

