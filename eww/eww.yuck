; ; ; ; Topbar Yuck ; ; ; ;
(include "./src/yuck/topbar.yuck")
(include "./src/yuck/notification.yuck")
(include "./src/yuck/dashboard.yuck")
(include "./src/yuck/wallpaper.yuck")
(include "./src/yuck/calendar.yuck")
(include "./src/yuck/osd.yuck")
; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;
;                Variables Section                  ;
; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;

; ; Workspaces
(deflisten workspaces :initial "0" "./scripts/bspwm_getWorkspace")
(defpoll layout :initial "./img/layouts/dwindlew.png" :interval "0.5s" "./scripts/bspwm_getLayout --icon")

; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;
;                Dashboard Variables                ;
; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;

; Quick settings variables

; ; Volume variables
(defpoll volume :interval "1s" "./scripts/volume --get")
(defpoll volume_muted :interval "1s" "./scripts/volume --getState")

; ; Microphone variables
(defpoll microphone :interval "1s" "./scripts/microphone --get")
(defpoll microphone_muted :interval "1s" "./scripts/microphone --getState")
(defvar microphone_revealer false)

; ; Brightness variables
(defpoll brightness :interval "1s" "./scripts/brightness --get")

; Notifications
(defvar notifDuration 5)
(defvar notifNow "{}")
(defvar notifHist "{}")
(defvar notifMuted false)
; ToDo list
(defvar taskList "[]")
(defvar taskTitle "")
(defvar taskBody "")
    
(defvar osd '{ "icon": "", "value": 0 }')

; Wi-Fi
(defpoll wifiInfo :interval "5s" :initial '{"status":"disconnected","name":"Wi-Fi","icon":"󰤮"}' "./scripts/wifi --info" )

(defpoll ipInfo :interval "5s" :initial '{"text": "Disconnected", "tooltip": "VPN Status: Disconnected", "IP": "192.168.0.6"}' "./scripts/local_ip")

(defpoll btInfo :interval "5s" :initial '{"status":"disconnected","name":"Bluetooth","icon":"󰂲"}' "./scripts/bluetooth --info" )

; Playerctl main variables
(deflisten playerctl :initial '{"length":"","artist":"","title":"","artUrl":""}' "./scripts/media")
(deflisten playerctlStatus :initial false "playerctl --follow status")
(deflisten playerctlShuffle :initial "Off" "playerctl --follow shuffle")
(deflisten playerctlLoop :initial "Off" "playerctl --follow loop")
(defpoll playerctlCTime :run-while {playerctlStatus == "Playing"} :interval "1s" "playerctl position")

; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;
;                Calendar Variables                 ;
; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;

(defpoll weather :interval "30s" :initial "{}" "./scripts/weather")
